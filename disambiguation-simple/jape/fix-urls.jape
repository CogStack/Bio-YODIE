/*
 * fix-urls.jape
 *
 * Copyright (c) 1995-2016, The University of Sheffield. See the file
 * COPYRIGHT.txt in the software or at
 * http://gate.ac.uk/gate/COPYRIGHT.txt
 *
 * This file is part of Bio-YODIE (see 
 * https://gate.ac.uk/applications/bio-yodie.html), and is free 
 * software, licenced under the GNU Affero General Public License
 * Version 3, 19 November 2007
 *
 * A copy of this licence is included in the distribution in the file
 * LICENSE-AGPL3.html, and is also available at
 * http://www.gnu.org/licenses/agpl-3.0-standalone.html
 *
 * G. Gorrell, 26 September 2016
 */

Phase: FixURLs
Input: Mention
Options: control = all debug = true  

// Prepend the base URI http://dbpedia.org/resource/ to the inst feature if it 
// is not already there (or something else that starts with http://)
// If the inst feature is not a string or missing or empty, set it to the 
// empty string which indicates a null. 

Rule: FixURLs
(
 {Mention}
)
:match
-->
:match{
 Annotation match = gate.Utils.getOnlyAnn(matchAnnots);

 FeatureMap fm = match.getFeatures();
 Object instObj = fm.get("inst");
 if(instObj == null) {
   System.err.println(doc.getName()+": ERROR inst feature is null for "+match);
   fm.put("inst","");
   return;
 }
 if(!(instObj instanceof String)) {
   System.err.println(doc.getName()+": ERROR inst feature is not a String for "+match);
   fm.put("inst","");
   return;
 } 
 String instString = (String)instObj;
 if(instString.trim().isEmpty()) {
   fm.put("inst","");
   return;
 }
 if(instString.startsWith("http://")) {
   return;
 }
 String inst = "http://dbpedia.org/resource/" + instString;
 fm.put("inst", inst);
}


